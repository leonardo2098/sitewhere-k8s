# SiteWhere Infrastructure
sitewhere-infra-core:
  enabled: true
  kafka_host: ""
  kafka_port: ""
  zookeeper_host: ""
  zookeeper_port: ""
infra:
  profile: mongodb
  image:
    registry: docker.io
    pullPolicy: IfNotPresent
    imagePullSecrets: "-"
  mongodb:
    replicaset: "rs0"
  mosquitto:
    enabled: true
    image: eclipse-mosquitto:1.4.12
    replicaCount: 1
    service:
      type: LoadBalancer
      port: 1883
  coap:
    enabled: false
    service:
      type: LoadBalancer
      port: 5683
services:
  # profile: default|minimal
  profile: default
  debug: false
  kafka:
    defaultTopicReplicationFactor: 3  #set default 1 for minimal
  grpc:
    maxRetryCount: 7
    initialBackoffSeconds: 11
    maxBackoffSeconds: 700
    backoffMultiplier: 1.6
    resolveFQDN: false
  health:
    port: 9003
    readinessProbe:
      initialDelay: 150
    livenessProbe:
      initialDelaySeconds: 350
      periodSeconds: 60
  metrics:
    port: 9090
  image:
    registry: docker.io
    repository: sitewhere
    # You can target `latest` for stable version of Sitewhere images,
    # `edge` for under development version of SiteWhere images or 
    # a particular version like `2.0.3`.
    # By default, target the last stable version of SiteWhere images
    tag: 3.0.0
    pullPolicy: IfNotPresent
    imagePullSecrets: "-"
  logging:
    sitewhere:
      level: INFO
      grpc:
        level: INFO
      kafka:
        level: INFO
    grpc:
      level: ERROR
    spring:
      boot: 
        level: INFO
      context: 
        level: INFO
      security: 
        level: INFO
    kafka:
      level: ERROR
    zookeeper:
      level: ERROR
    mongodb:
      level: WARN
  resources:
    limits:
      memory: 800Mi
      cpu: 500m
    requests:
      memory: 200Mi
      cpu: 100m
  asset_management:
    enabled: true
    image: service-asset-management
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  device_management:
    enabled: true
    image: service-device-management
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  event_management:
    enabled: true
    image: service-event-management
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  event_sources:
    enabled: true
    image: service-event-sources
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  inbound_processing:
    enabled: true
    image: service-inbound-processing
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  instance_management:
    enabled: true
    image: service-instance-management
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
        user_management:
          port: 9004
      http:
        type: ClusterIP
        port: 8080
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  outbound_connectors:
    enabled: true
    image: service-outbound-connectors
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  batch_operations:
    enabled: false
    image: service-batch-operations
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  command_delivery:
    enabled: false
    image: service-command-delivery
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  device_registration:
    enabled: false
    image: service-device-registration
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  device_state:
    enabled: false
    image: service-device-state
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  event_search:
    enabled: false
    image: service-event-search
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  label_generation:
    enabled: false
    image: service-label-generation
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  rule_processing:
    enabled: false
    image: service-rule-processing
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  schedule_management:
    enabled: false
    image: service-schedule-management
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 
  streaming_media:
    enabled: false
    image: service-streaming-media
    replicaCount: 1
    service:
      type: ClusterIP
      grpc:
        api:
          port: 9000
        management:
          port: 9001
    resources:
      limits:
        memory: 
        cpu: 
      requests:
        memory: 
        cpu: 

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## If defined, storageClassName: [rook-ceph-block|hostpath]
  accessModes:
    - ReadWriteOnce
  storage: 10Gi
  annotations: {}


